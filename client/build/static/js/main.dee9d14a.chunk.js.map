{"version":3,"sources":["js/constants/action-types.js","js/reducers/index.js","js/store/index.js","js/actions/index.js","Components/Sidebar/Road/Road.jsx","Components/Sidebar/Sidebar.jsx","Components/Loading/Loading.jsx","Components/Maps/Maps.jsx","Components/Filter/Filter.jsx","Components/InformationCard/InformationCard.jsx","App.jsx","index.jsx"],"names":["SET_BOUNDS","SET_ROADS","SET_FILTER","SET_INFORMATION","initialState","roads","bounds","filter","information","rootReducer","state","action","type","payload","store","createStore","setBounds","setFilter","setInformation","Road","road","incidents","className","onClick","ev","target","classList","contains","closest","toggle","aria-hidden","name","icon","faHardHat","roadwork_amount","length","count","faCarSide","jam_amount","map","incident","from","to","reason","delay","distance","dispatch","handleIncidentClick","label","extid","Sidebar","useSelector","id","Loading","faSpinner","spin","GoogleApiWrapper","apiKey","google","polylines","mapStyle","elementType","stylers","color","featureType","useState","maps","LatLngBounds","newBounds","setPolylinesBounds","undefined","forEach","polyline","decodePolyline","push","line","lat","lng","extend","useEffect","LatLng","southWest","northEast","zoom","initialCenter","onReady","mapProps","setOptions","styles","mapLoaded","path","strokeColor","strokeWeight","registerLocale","nl","Filter","Date","startDate","setStartDate","today","selected","onChange","date","showTimeSelect","dateFormat","locale","maxDate","isClearable","InformationCard","card","setCard","faTimes","App","params","URLSearchParams","fetch","toString","then","response","json","data","subscribe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dee9d14a.chunk.js","sourcesContent":["export const SET_BOUNDS = 'SET_BOUNDS';\nexport const SET_ROADS = 'SET_ROADS';\nexport const SET_FILTER = 'SET_FILTER';\nexport const SET_INFORMATION = 'SET_INFORMATION';\n","import {\n  SET_BOUNDS, SET_ROADS, SET_FILTER, SET_INFORMATION,\n} from '../constants/action-types';\n\nconst initialState = {\n  roads: null,\n  bounds: null,\n  filter: null,\n  information: null,\n};\n\nconst rootReducer = (state = initialState, action) => {\n  if (action.type === SET_BOUNDS) {\n    state.bounds = action.payload;\n  }\n\n  if (action.type === SET_ROADS) {\n    state.roads = action.payload;\n  }\n\n  if (action.type === SET_FILTER) {\n    state.filter = action.payload;\n  }\n\n  if (action.type === SET_INFORMATION) {\n    state.information = action.payload;\n  }\n\n  return state;\n};\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(rootReducer);\nexport default store;\n","import {\n  SET_BOUNDS, SET_ROADS, SET_FILTER, SET_INFORMATION,\n} from '../constants/action-types';\n\nexport const setBounds = (payload) => ({ type: SET_BOUNDS, payload });\n\nexport const setRoads = (payload) => ({ type: SET_ROADS, payload });\n\nexport const setFilter = (payload) => ({ type: SET_FILTER, payload });\n\nexport const setInformation = (payload) => ({ type: SET_INFORMATION, payload });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCarSide, faHardHat } from '@fortawesome/free-solid-svg-icons';\nimport './Road.scss';\nimport store from '../../../js/store/index';\nimport { setBounds, setInformation } from '../../../js/actions/index';\n\nconst Road = ({ road }) => {\n  const { incidents } = road;\n\n  const handleRoadClick = (ev) => {\n    if (!ev.target.classList.contains('roadwork') && !ev.target.classList.contains('jam')) {\n      ev.target.closest('.road').classList.toggle('active');\n    }\n  };\n\n  const handleIncidentClick = ({\n    road: name,\n    bounds,\n    type,\n    from,\n    to,\n    reason,\n    delay,\n    distance,\n  }) => {\n    store.dispatch(setBounds(bounds));\n    store.dispatch(setInformation(\n      {\n        road: name ?? null,\n        type: type ?? null,\n        from: from ?? null,\n        to: to ?? null,\n        reason: reason ?? null,\n        delay: delay ?? null,\n        distance: distance ?? null,\n      },\n    ));\n  };\n\n  return (\n    <div className={`road ${road.type}-road`} onClick={handleRoadClick} aria-hidden=\"true\">\n      <span className=\"name\">{ road.name }</span>\n      <span className=\"icons\">\n        <div className=\"roadworks\">\n          <FontAwesomeIcon icon={faHardHat} />\n          {' '}\n          <span className=\"number\">{ road.roadwork_amount.length ? road.roadwork_amount[0].count : 0 }</span>\n        </div>\n        <div className=\"jams\">\n          <FontAwesomeIcon icon={faCarSide} />\n          {' '}\n          <span className=\"number\">{ road.jam_amount.length ? road.jam_amount[0].count : 0 }</span>\n        </div>\n      </span>\n      <span className=\"quickinfo\">\n        {\n          incidents.length\n            ? incidents.map((incident) => (\n              <div className={incident.type} onClick={() => { handleIncidentClick(incident); }} key={road.extid} aria-hidden=\"true\">\n                <FontAwesomeIcon icon={incident.type === 'roadwork' ? faHardHat : faCarSide} />\n                {' '}\n                Van\n                {' '}\n                { incident.from.label }\n                {' '}\n                tot\n                {' '}\n                { incident.to.label }\n              </div>\n            ))\n            : ''\n        }\n      </span>\n    </div>\n  );\n};\n\nRoad.propTypes = {\n  road: PropTypes.isRequired,\n};\n\nexport default Road;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Road from './Road/Road';\nimport './Sidebar.scss';\n\nconst Sidebar = () => {\n  const roads = useSelector((state) => state.roads);\n\n  return (\n    <aside id=\"sidebar\">\n      <h2>Verkeersinformatie</h2>\n      {\n        !roads ? ''\n          : roads.map((road) => {\n            if (road.incidents.length > 0) {\n              return <Road road={road} key={road.name} />;\n            }\n\n            return null;\n          })\n      }\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport './Loading.scss';\n\nconst Loading = () => (\n  <div id=\"loading\">\n    <h2>\n      <FontAwesomeIcon icon={faSpinner} spin />\n      {' '}\n      Laden...\n    </h2>\n  </div>\n);\n\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport decodePolyline from 'decode-google-map-polyline';\nimport { Map, GoogleApiWrapper, Polyline } from 'google-maps-react';\n\nconst Maps = ({ google }) => {\n  const polylines = [];\n\n  const roads = useSelector((state) => state.roads);\n  const mapStyle = [{ elementType: 'geometry', stylers: [{ color: '#f5f5f5' }] }, { elementType: 'labels.text.fill', stylers: [{ color: '#616161' }] }, { elementType: 'labels.text.stroke', stylers: [{ color: '#f5f5f5' }] }, { featureType: 'administrative.land_parcel', elementType: 'labels.text.fill', stylers: [{ color: '#bdbdbd' }] }, { featureType: 'poi', elementType: 'geometry', stylers: [{ color: '#eeeeee' }] }, { featureType: 'poi', elementType: 'labels.text.fill', stylers: [{ color: '#757575' }] }, { featureType: 'poi.park', elementType: 'geometry', stylers: [{ color: '#e5e5e5' }] }, { featureType: 'poi.park', elementType: 'labels.text.fill', stylers: [{ color: '#9e9e9e' }] }, { featureType: 'road', elementType: 'geometry', stylers: [{ color: '#ffffff' }] }, { featureType: 'road.arterial', elementType: 'labels.text.fill', stylers: [{ color: '#757575' }] }, { featureType: 'road.highway', elementType: 'geometry', stylers: [{ color: '#dadada' }] }, { featureType: 'road.highway', elementType: 'labels.text.fill', stylers: [{ color: '#616161' }] }, { featureType: 'road.local', elementType: 'labels.text.fill', stylers: [{ color: '#9e9e9e' }] }, { featureType: 'transit.line', elementType: 'geometry', stylers: [{ color: '#e5e5e5' }] }, { featureType: 'transit.station', elementType: 'geometry', stylers: [{ color: '#eeeeee' }] }, { featureType: 'water', elementType: 'geometry', stylers: [{ color: '#c9c9c9' }] }, { featureType: 'water', elementType: 'labels.text.fill', stylers: [{ color: '#9e9e9e' }] }];\n  const [bounds, setBounds] = useState(new google.maps.LatLngBounds());\n  const newBounds = useSelector((state) => state.bounds);\n\n  const mapLoaded = (mapProps, map) => {\n    map.setOptions({\n      styles: mapStyle,\n    });\n  };\n\n  const setPolylinesBounds = () => {\n    if (undefined !== roads) {\n      roads.forEach((road) => {\n        const { incidents } = road;\n\n        if (incidents.length) {\n          incidents.forEach((incident) => {\n            if (incident.polyline !== null) {\n              const polyline = decodePolyline(incident.polyline);\n              polylines.push({\n                id: incident.id,\n                type: incident.type,\n                line: polyline,\n              });\n            }\n\n            if (incident.bounds.lat && incident.bounds.lng && newBounds === null) {\n              bounds.extend(incident.bounds);\n            }\n          });\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (newBounds !== null) {\n      setBounds(\n        new google.maps.LatLngBounds(\n          new google.maps.LatLng(newBounds.southWest),\n          new google.maps.LatLng(newBounds.northEast),\n        ),\n      );\n    } else {\n      setBounds(\n        new google.maps.LatLngBounds(\n          new google.maps.LatLng(\n            {\n              lat: 50.803721015,\n              lng: 3.31497114423,\n            },\n          ),\n          new google.maps.LatLng(\n            {\n              lat: 53.5104033474,\n              lng: 7.09205325687,\n            },\n          ),\n        ),\n      );\n      setPolylinesBounds();\n    }\n  }, [newBounds]);\n\n  setPolylinesBounds();\n\n  return (\n    <Map\n      google={google}\n      bounds={bounds}\n      zoom={8}\n      initialCenter={\n        {\n          lat: 52.1326,\n          lng: 5.2913,\n        }\n      }\n      onReady={(mapProps, map) => {\n        mapLoaded(mapProps, map);\n      }}\n    >\n      {\n        polylines.map((polyline) => <Polyline path={polyline.line} strokeColor={polyline.type === 'roadwork' ? '#F79F1F' : '#EA2027'} strokeWeight={3} key={polyline.id} />)\n      }\n    </Map>\n  );\n};\n\nMaps.propTypes = {\n  google: PropTypes.isRequired,\n};\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyA3QGxol-EFFIQZgZnu0zTJPVkgxvnFJhU', // 'AIzaSyDYhmmgZPV4hmWE81saE92UbbLAWkhBsC0'\n})(Maps);\n","import React, { useState } from 'react';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport nl from 'date-fns/locale/nl';\nimport store from '../../js/store/index';\nimport { setFilter, setBounds, setInformation } from '../../js/actions/index';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Filter.scss';\n\nregisterLocale('nl', nl);\n\nconst Filter = () => {\n  const [startDate, setStartDate] = useState(new Date());\n  const today = new Date();\n\n  const handleOnChange = (date) => {\n    setStartDate(date);\n\n    store.dispatch(setFilter(date));\n    store.dispatch(setBounds(null));\n    store.dispatch(setInformation(null));\n  };\n\n  return (\n    <div id=\"filter\">\n      <h2>Filter op datum en tijd</h2>\n\n      <DatePicker\n        selected={startDate}\n        onChange={handleOnChange}\n        showTimeSelect\n        dateFormat=\"d MMMM, yyyy HH:mm\"\n        locale=\"nl\"\n        maxDate={today}\n        isClearable\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport store from '../../js/store/index';\nimport './InformationCard.scss';\nimport { setInformation, setBounds, setFilter } from '../../js/actions';\n\nconst InformationCard = () => {\n  const information = useSelector((state) => state.information);\n  const [card, setCard] = useState(null);\n\n  const handleClose = () => {\n    store.dispatch(setInformation(null));\n    store.dispatch(setBounds(null));\n    store.dispatch(setFilter(null));\n  };\n\n  useEffect(() => {\n    setCard(information);\n  }, [information]);\n\n  return (\n    <div id=\"information-card\">\n      {\n        card !== null\n          ? (\n            <>\n              <h3>\n                { card.road }\n                {' '}\n                (\n                { card.type === 'roadwork' ? 'Wegwerkzaamheden' : 'File' }\n                )\n                <FontAwesomeIcon icon={faTimes} onClick={handleClose} className=\"close\" />\n              </h3>\n              <div className=\"info\">\n                <div className=\"row\">\n                  <span className=\"title\">Van:</span>\n                  <span className=\"value\">{ card.from.label }</span>\n                </div>\n\n                <div className=\"row\">\n                  <span className=\"title\">Tot:</span>\n                  <span className=\"value\">{ card.to.label }</span>\n                </div>\n\n                {\n                card.distance\n                && (\n                <>\n                  <div className=\"row\">\n                    <span className=\"title\">Lengte:</span>\n                    <span className=\"value\">\n                      { card.distance / 1000 }\n                      {' '}\n                      km\n                    </span>\n                  </div>\n                </>\n                )\n              }\n\n                {\n                card.delay\n                && (\n                <>\n                  <div className=\"row\">\n                    <span className=\"title\">Vertraging:</span>\n                    <span className=\"value\">\n                      { card.delay / 60 }\n                      {' '}\n                      minuten\n                    </span>\n                  </div>\n                </>\n                )\n              }\n\n                {\n                card.reason\n                && (\n                <>\n                  <div className=\"row\">\n                    <span className=\"title\">Reden:</span>\n                    <span className=\"value\">{ card.reason }</span>\n                  </div>\n                </>\n                )\n              }\n              </div>\n            </>\n          )\n          : <h3>Geen incident geselecteerd</h3>\n      }\n    </div>\n  );\n};\n\nexport default InformationCard;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Sidebar from './Components/Sidebar/Sidebar';\nimport Loading from './Components/Loading/Loading';\nimport Maps from './Components/Maps/Maps';\nimport Filter from './Components/Filter/Filter';\nimport InformationCard from './Components/InformationCard/InformationCard';\nimport store from './js/store/index';\nimport { setRoads } from './js/actions/index';\nimport './App.scss';\n\nfunction App() {\n  const roads = useSelector((state) => state.roads);\n  const filter = useSelector((state) => state.filter);\n\n  useEffect(() => {\n    const params = new URLSearchParams({ filter });\n\n    fetch(`/data/get?${params.toString()}`)\n      .then((response) => response.json())\n      .then((data) => store.dispatch(setRoads(data)));\n  }, [filter]);\n\n  return (\n    <div id=\"app\">\n      {\n        !roads ? <Loading />\n          : (\n            <>\n              <Sidebar />\n              <Maps />\n              <Filter />\n              <InformationCard />\n            </>\n          )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './js/store/index';\n\nstore.subscribe(() => { });\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}